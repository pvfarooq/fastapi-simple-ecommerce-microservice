services:
  main_app:
    build:
      context: ./user_product_service
      dockerfile: Dockerfile
    container_name: user_product_service
    ports:
      - 8000:8000
    env_file:
      - ./user_product_service/.env
    volumes:
      - ./user_product_service:/app
    working_dir: /app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      - main_app_db
      - rabbitmq
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M

  order_app:
    build:
      context: ./order_service
      dockerfile: Dockerfile
    container_name: order_service
    ports:
      - 8001:8001
    env_file:
      - ./order_service/.env
    volumes:
      - ./order_service:/app
    working_dir: /app
    command: uvicorn main:app --host 0.0.0.0 --port 8001 --reload
    depends_on:
      - order_app_db
      - rabbitmq
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M


  main_app_db:
    image: postgres:15
    container_name: main_app_db
    ports:
      - 5432:5432
    env_file:
      - ./user_product_service/.env
    volumes:
      - ecom_main_db:/var/lib/postgresql/data

  order_app_db:
    image: postgres:15
    container_name: order_app_db
    ports:
      - 5433:5432
    env_file:
      - ./order_service/.env
    volumes:
      - ecom_order_db:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 256M


volumes:
  ecom_main_db:
  ecom_order_db: